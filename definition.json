{
	"structures": [
		{ "name": "advisor", "id": 0, "communications": 0, "hours": 8, "distribution": [], "x": 40, "y": 40 },
		{ "name": "office", "left": 30, "right": 70, "top": 30, "bottom": 70 },
		{ "name": "employee-0", "id": 1, "communications": 0},
		{ "name": "employee-1", "id": 2, "communications": 0},
		{ "name": "employee-2", "id": 3, "communications": 0},
		{ "name": "employee-3", "id": 4, "communications": 0},
		{ "name": "employee-4", "id": 5, "communications": 0},
		{ "name": "experiment", "p": 0.8, "limit": 3 },
		{ "name": "workload", "activities": ["research", "meeting", "preparation"], "max": 5, "count": 0 },
		{ "name": "walks", "attributes": {"dx": "(0.5-Math.random())*4", "dy": "(0.5-Math.random())*4"}, "structureName": "walk", "max": 30, "count": 0 }
	],
	"roles": [
		{
			"name": "sender", "attributes": [
				{ "name": "id" }
			]
		},
		{
			"name": "receiver", "attributes": [
				{ "name": "id" },
				{ "name": "communications", "writable": true }
			]
		},
		{
			"name": "constants", "attributes": [
				{ "name": "p" }
			]
		},
		{
			"name": "limiter", "attributes": [
				{ "name": "limit" }
			]
		},
		{
			"name": "worker", "attributes": [
				{ "name": "id" },
				{ "name": "hours"},
				{ "name": "distribution", "writable": true}
			]
		},
		{
			"name": "schedule", "attributes": [
				{ "name": "activities" },
				{ "name": "max"},
				{ "name": "count", "writable": true }
			]
		},
		{
			"name": "movable", "attributes": [
				{ "name": "x", "writable": true },
				{ "name": "y", "writable": true }
			]
		},
		{
			"name": "force", "attributes": [
				{ "name": "dx" },
				{ "name": "dy" }
			]
		},
		{
			"name": "bounds", "attributes": [
				{ "name": "left" },
				{ "name": "right" },
				{ "name": "top" },
				{ "name": "bottom" }
			]
		},
		{
			"name": "generator", "attributes": [
				{ "name": "structureName"},
				{ "name": "attributes"},
				{ "name": "max"},
				{ "name": "count", "writable": true }
			]
		}
	],
	"behaviours": [
		{
			"name": "send",
			"roles": ["sender", "receiver"],
			"action": "receiver.communications += 1"
		},
		{
			"name": "log",
			"roles": ["schedule", "worker"],
			"action": "const v = schedule.activities.map(a => Math.random()); v[0] = 1; v.sort((a,b) => a-b); worker.distribution = schedule.activities.map((a,i) => [a, ((i == 0) ? v[i] : v[i] - v[i-1])]);schedule.count += 1;"
		},
		{
			"name": "move",
			"roles": ["movable", "force"],
			"action": "movable.x += force.dx; movable.y += force.dy; force.deactivated = true;"
		},
		{
			"name": "generate",
			"roles": ["generator"],
			"action": "create(generator.structureName, generator.attributes); generator.count += 1"
		}
	],
	"constraints": [
		{
			"name": "can send",
			"roles": ["sender", "receiver", "constants", "limiter"],
			"condition": "(Math.random() < constants.p) ? (receiver.communications < limiter.limit) : false"
		},
		{
			"name": "no self comms",
			"roles": ["sender", "receiver"],
			"condition": "sender.id != receiver.id"
		},
		{
			"name": "within bounds",
			"roles": ["movable", "force", "bounds"],
			"condition": "(bounds.left < (movable.x + force.dx) && (movable.x + force.dx) < bounds.right) && (bounds.top < (movable.y + force.dy) && (movable.y + force.dy) < bounds.bottom)"
		},
		{
			"name": "generate until",
			"roles": ["generator"],
			"condition": "generator.count < generator.max"
		},
		{
			"name": "log until",
			"roles": ["schedule"],
			"condition": "schedule.count < schedule.max"
		}
	],
	"interactions": [
		{
			"name": "work",
			"constraints": ["log until"],
			"behaviours": ["log"]
		},
		{
			"name": "generating",
			"constraints": ["generate until"],
			"behaviours": ["generate"]
		},
		{
			"name": "movement",
			"constraints": ["within bounds"],
			"behaviours": ["move"]
		},
		{
			"name": "communication",
			"constraints": ["no self comms", "can send"],
			"behaviours": ["send"]
		}
	]
}